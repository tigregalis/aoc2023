let map = (([one two three four five six seven eight nine] | wrap english | merge (1..9 | wrap number)) | append (0..9 | each { |num| { english: ($num | into string), number: $num } })); open 01 | lines | each {|line| $map | each {|num| $line | $num | merge ($line | str index-of $num.english | wrap location) | append ($num | merge ($line | str index-of -e $num.english | wrap location)) } | flatten | filter {|row| $row.location >= 0} | sort-by location | 10 * ($in | first | get number) + ($in | last | get number) | [[number line]; [$in $line]] | get 0 } | select number | math sum | get number